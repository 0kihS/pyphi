# PyPhi configuration
# ~~~~~~~~~~~~~~~~~~~
# See the documentation for ``pyphi.config`` for more info.
---
# Approximations and theoretical options
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# The version of the theory to use
IIT_VERSION: "maximal-state-first"
# In certain cases, making a cut can actually cause a previously reducible
# concept to become a proper, irreducible concept. Assuming this can never
# happen can increase performance significantly, however the obtained results
# are not strictly accurate.
ASSUME_CUTS_CANNOT_CREATE_NEW_CONCEPTS: false
# The measure to use when computing phi ("EMD", "KLD", "L1", ...)
REPERTOIRE_DISTANCE: "IIT_4.0_SMALL_PHI"
# The measure to use when computing big-phi.
CES_DISTANCE: "SUM_SMALL_PHI"
# The measure to use when computing actual causation alpha values.
ACTUAL_CAUSATION_MEASURE: "PMI"
# Controls the partitioning scheme for distinctions.
PARTITION_TYPE: "TRI"
# Controls the partitioning scheme for relations.
RELATION_PARTITION_TYPE: "TRI"
# Controls the way in which distinction-relative differences are combined to
# obtain a relation phi value.
RELATION_PARTITION_AGGREGATION: "SUM"
# Controls whether the relation computation checks whether there are duplicate
# purviews (same elements and direction) in the relata being evaluated and
# returns a zero-phi relation if so. This case should never arise in normal
# operation, since relations are normally only computed among distinctions in a
# nonconflicting set. Defaults to false to avoid the cost of checking.
RELATION_ENFORCE_NO_DUPLICATE_PURVIEWS: false
# Controls the partitioning scheme for the system.
SYSTEM_PARTITION_TYPE: "TEMPORAL_DIRECTED_BI"
# Controls the set of possible purviews for a relation.
RELATION_POTENTIAL_PURVIEWS: "WHOLE"
# Controls how relation phi values are computed.
RELATION_PHI_SCHEME: "CONGRUENCE_RATIO_TIMES_INFORMATIVENESS"
# Controls the overlap ratio used in computing relations.
OVERLAP_RATIO: "PURVIEW_SIZE"
# Controls the congruence ratio used in computing relations.
CONGRUENCE_RATIO: "PURVIEW_SIZE"
# Controls the definition of the upper bound of distinction phi when calculating relations.
DISTINCTION_SMALL_PHI_UPPER_BOUND_RELATION: "PURVIEW_SIZE"
# Controls the definition of the upper bound of distinction phi when analyzing a system.
DISTINCTION_SMALL_PHI_UPPER_BOUND_SYSTEM: "ONE"
# DISTINCTION_SMALL_PHI_UPPER_BOUND_SYSTEM: "PURVIEW_SIZE"
# Controls how relations are computed. Can be either "CONCRETE", "ANALYTICAL",
# or "SAMPLED".
RELATION_COMPUTATION: "CONCRETE"
# Controls the sample size for approximated relations. Only applies if
# RELATION_COMPUTATION implies a sampling approach.
RELATION_SAMPLE_SIZE: 1000
# Controls the sampled degrees for sampled relations. Only applies if
# ``RELATION_COMPUTATION`` implies a sampling approach.  Can be either falsy
# (sample uniformly from all possible relations) or a list of degrees (sample
# uniformly from possible relations with those degrees).  If the list contains
# only nonnegative integers, then they are interpreted as absolute degrees;
# otherwise they are interpreted as relative to the middle degree (the most
# numerous), signified by 0.
RELATION_SAMPLE_DEGREES: false
# Controls the number of seconds to wait while sampling.
RELATION_SAMPLE_TIMEOUT: 1.0
# Controls how to resolve phi-ties when computing MICE.
PICK_SMALLEST_PURVIEW: false
# The type of system cuts to use
SYSTEM_CUTS: "3.0_STYLE"
# In some applications of this library, you may want to allow single
# micro-nodes with a self-loop to have nonzero Phi. See ``pyphi.config`` for
# details.
SINGLE_MICRO_NODES_WITH_SELFLOOPS_HAVE_PHI: false
# Controls whether a subsystem's state is validated when the subsystem is
# created.
VALIDATE_SUBSYSTEM_STATES: true
# Controls whether a system is validated for conditional independence.
VALIDATE_CONDITIONAL_INDEPENDENCE: true

# Parallelization and system resources
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Controls whether concepts are evaluated in parallel.
PARALLEL_CONCEPT_EVALUATION: false
# Controls whether cuts are evaluated in parallel, which requires more memory.
# If cuts are evaluated sequentially, only two SIAs need to be in memory at a
# time.
PARALLEL_CUT_EVALUATION: false
# Controls whether complexes are evaluated in parallel.
PARALLEL_COMPLEX_EVALUATION: false
# The number of CPU cores to use in parallel.
# -1 means all available cores, -2 means all but one available cores, etc.
NUMBER_OF_CORES: -1
# Some functions are memoized using an in-memory cache. This is the maximum
# percentage of memory that these caches can collectively use.
MAXIMUM_CACHE_MEMORY_PERCENTAGE: 100
# Arguments to `ray.init()`
RAY_CONFIG:
  address: "auto"

# Memoization and caching
# ~~~~~~~~~~~~~~~~~~~~~~~
# Controls whether SIAs are cached.
CACHE_SIAS: false
# Controls whether cause and effect repertoires are cached.
CACHE_REPERTOIRES: true
# Controls whether the potential purviews of the mechanisms of a network are
# cached. Speeds up calculations when the same network is used repeatedly, but
# takes up additional memory, and makes network initialization slow.
CACHE_POTENTIAL_PURVIEWS: true
# Controls whether subsystem caches are automatically cleared after computing
# the SIA for the subsystem.
CLEAR_SUBSYSTEM_CACHES_AFTER_COMPUTING_SIA: false
# The caching system to use. "fs" means cache the results on the local
# filesystem, in a subdirectory of the current directory; "db" means connect to
# a database and store the results there.
CACHING_BACKEND: "fs"
# The verbosity of filesystem caching (integer from 0 to 11).
FS_CACHE_VERBOSITY: 0
# The directory to use for local persistent caching on the filesystem. This
# only has an effect if the caching backend is the filesystem and not a
# database.
FS_CACHE_DIRECTORY: "__pyphi_cache__"
# These are the settings for the MongoDB database used in the 'db' caching
# backend.
MONGODB_CONFIG:
  host: "localhost"
  port: 27017
  database_name: "pyphi"
  collection_name: "test"
# Use a Redis server as a MICE cache
REDIS_CACHE: false
# Redis connection configuration
REDIS_CONFIG:
  host: "localhost"
  port: 6379
  db: 0
  test_db: 1

# Logging
# ~~~~~~~
# Whether to suppress the welcome message.
WELCOME_OFF: false
# The log level to write to stdout.
LOG_STDOUT_LEVEL: "WARNING"
# The log level to write to `LOG_FILE`.
LOG_FILE_LEVEL: "INFO"
# The file to log to.
LOG_FILE: "pyphi.log"
# Enable/disable progress bars
PROGRESS_BARS: true
# Use pretty __str__-like formatting in repr calls.
REPR_VERBOSITY: 2
# Print numbers as fractions if the denominator isn't too big.
PRINT_FRACTIONS: true

# Numerical precision
# ~~~~~~~~~~~~~~~~~~~
# The number of decimal places to which Phi values are considered accurate.
PRECISION: 15
